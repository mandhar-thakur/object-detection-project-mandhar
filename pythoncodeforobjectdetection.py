# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Zls-t32AvS8LgxyH-Fr0NWNFcnXPGd5L
"""

!pip install ultralytics

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="kVDxjPgNQsH6cxjjN0Do")
project = rf.workspace("roboflow-58fyf").project("rock-paper-scissors-sxsw")
version = project.version(14)
dataset = version.download("yolov8")

from ultralytics import YOLO
model = YOLO("/content/runs/detect/train2/weights/best.pt")  # Nano version( use yolov8n.pt for initialization and to set a base once all specified epochs have run switch to best.pt to switch model to a custom trained dataset)
results = model.predict(source="/content/rock-paper-scissors-14/test/images", save=True)

model.train(data="/content/rock-paper-scissors-14/data.yaml", epochs=20, imgsz=640)

model.val()

model.predict(source="/content/rock-paper-scissors-14/test/images", save=True)

for r in results:
    for box in r.boxes:
        cls_id = int(box.cls[0])
        label = r.names[cls_id]
        conf = box.conf[0].item()
        print(f"Prediction: {label} ({conf:.2f})")

model.export(format="onnx")  # exporting to ONNX for visualization.
model = YOLO("/content/runs/detect/train2/weights/best.pt")

!pip install streamlit pyngrok

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# from ultralytics import YOLO
# from PIL import Image
# import numpy as np
# 
# model = YOLO("/content/runs/detect/train2/weights/best.pt")
# 
# st.title("ðŸ§  Rock-Paper-Scissors Detector (YOLOv8)")
# uploaded_file = st.file_uploader("Upload an image", type=["jpg", "jpeg", "png"])
# 
# if uploaded_file:
#     image = Image.open(uploaded_file)
#     st.image(image, caption="Uploaded Image", use_column_width=True)
# 
#     results = model.predict(image, conf=0.25)
#     output = results[0].plot()
#     st.image(np.array(output), caption="Prediction", use_column_width=True)
#

!ngrok config add-authtoken 2xf40VYLNHCgn2VPWqbdT6g35zz_xq1xQAdqZ1HzSVz5kX1C

from pyngrok import ngrok
import threading
import os

# Start the Streamlit app in a separate thread
def start_streamlit():
    os.system("streamlit run app.py")

thread = threading.Thread(target=start_streamlit)
thread.start()

# Start an http tunnel on port 8501
public_url = ngrok.connect(8501, "http")
print("ðŸš€ Your app is live at:", public_url)
